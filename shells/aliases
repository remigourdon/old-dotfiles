# Source bashrc
alias sbrc='source ~/.bashrc'

# sudo (this tick allows to run sudo command with user's PATH and bashrc)
alias sudo='sudo '

# Editor
alias e='$EDITOR'

# rm
alias rm='rm -i'

# ls
alias ls='ls --color=auto --group-directories-first'
alias l='ls'
alias ll='ls -lh'
alias la='ls -lah'

# cd
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

# hexdump
alias hd='hexdump -C'

# dd
alias dd='dd status=progress'

# lsblk
alias lk='lsblk'

# grep
alias grep='grep --color=auto'
alias grepg='grep --exclude-dir=.git'

# diff
alias diff='diff --color=auto'

# mkdir
alias mkdir='mkdir -pv'

# Protection against overwriting
alias cp='cp -i'
alias mv='mv -i'

# cat
alias c='cat'

# Use highlight for colored cat
alias cc='highlight --out-format=ansi'

# rsync
alias rsya='rsync --progress -azvh'
alias rsyda='rsync --dry-run -azvh'
alias rsyad='rsync --progress -azvh --delete'
alias rsydad='rsync --dry-run -azvh --delete'

# git
alias gs='git status'
alias gl='git log'
alias gd='git diff'
alias ga='git add'
alias gaa='git add .'
alias gh='git checkout'
alias ghm='git checkout master'
alias ghb='git checkout -b'
alias gb='git branch'
alias gc='git commit'
alias gcm='git commit -m'
alias gca='git commit --amend'
alias gri='git rebase --interactive'

# Remove host from SSH keygen know hosts
alias sshr='ssh-keygen -f $HOME/.ssh/known_hosts -R'

# Set date on remote
sshd() { echo "Setting date to local on ${1}" ; ssh "${1}" sudo date -s @`date +%s` ; }

# neovim
command -v nvim 2>&1 >/dev/null && alias vim='nvim'

# netstat
alias ports='netstat -tulanp'

# bladeRF
alias brf='bladeRF-cli'
alias brfv='bladeRF-cli -e version'
alias brfi='bladeRF-cli -e info'
alias brfp='bladeRF-cli -e print'

# tmux
alias tml='tmux list-sessions'
alias tma='tmux attach-session -t'
alias tmk='tmux kill-session -t'

# udiskie
alias udm='udiskie-mount -r'
alias udu='udiskie-umount --force'
alias udua='udiskie-umount --all'
alias udd='udiskie-umount --force --detach'
alias udda='udiskie-umount --all --detach'

# ansible
alias ap='ansible-playbook'

# Move up N directories
up() { cd $(eval printf '../'%.0s {1..$1}) && pwd; }

# Display CSV
csv() {
    if [ "$#" -ne 0 ] ; then
        for file in "$@" ; do
            [ -z "${data}" ] && local data="> ${file}" || local data="${data}\n\n> ${file}"
            data="${data}\n$(column -t -s, -n "${file}")"
        done
        echo -e "${data}" | less -F -S -X -K
    else
        column -t -s, -n "$@" | less -F -S -X -K
    fi
}

# Display TSV
tsv() {
    if [ "$#" -ne 0 ] ; then
        for file in "$@" ; do
            [ -z "${data}" ] && local data="> ${file}" || local data="${data}\n\n> ${file}"
            data="${data}\n$(column -t -s$'\t' -n "${file}")"
        done
        echo -e "${data}" | less -F -S -X -K
    else
        column -t -s, -n "$@" | less -F -S -X -K
    fi
}

# Display JSON
json() {
    if command -v bat >/dev/null ; then
        PAGER="bat -l JSON --style plain"
    else
        PAGER="less -F -S -X -K"
    fi
    if [ "$#" -ne 0 ] ; then
        for file in "$@" ; do
            [ -z "${data}" ] && local data="> ${file}" || local data="${data}\n\n> ${file}"
            data="${data}\n$(python -m json.tool "${file}")"
        done
        echo -e "${data}" | ${PAGER}
    else
        cat | python -m json.tool | ${PAGER}
    fi
}

# recursive git commands
gr() {
    for d in $(find . -mindepth 1 -type d -name '.git') ; do
        pushd "${d%.git}" >/dev/null
        if git rev-parse --is-inside-work-tree >/dev/null 2>&1 ; then
            echo -e "\e[34m> ${PWD}\e[0m"
            git --git-dir="${PWD}/.git" --work-tree="${PWD}" "${@}"
            echo
        fi
        popd >/dev/null
    done
}
alias grl='gr log HEAD --oneline --no-walk'
alias grs='gr status --short'
